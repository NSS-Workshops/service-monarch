name: Deploy Monarch Service

on:
  push:
    branches: [ main ]
    paths:
      - '**.py'
      - 'Dockerfile'
      - 'docker-compose.yml'
      - '.github/workflows/**'
      - 'requirements.txt'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python -m pytest
        continue-on-error: true  # Since tests aren't implemented yet

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build Docker Image
        run: docker build -t registry.digitalocean.com/${{ secrets.DOCKER_REGISTRY }}/monarch:${{ github.sha }} .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DO Container Registry
        run: |
          docker push registry.digitalocean.com/${{ secrets.DOCKER_REGISTRY }}/monarch:${{ github.sha }}
          docker tag registry.digitalocean.com/${{ secrets.DOCKER_REGISTRY }}/monarch:${{ github.sha }} registry.digitalocean.com/${{ secrets.DOCKER_REGISTRY }}/monarch:latest
          docker push registry.digitalocean.com/${{ secrets.DOCKER_REGISTRY }}/monarch:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Create deployment directory and files on droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir -p /opt/monarch

      - name: Copy deployment files to droplet
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "/opt/monarch"

      - name: Deploy to Digital Ocean droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/monarch

            # Create or update .env file
            cat > .env << EOF
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
            SLACK_BOT_TOKEN=${{ secrets.SLACK_BOT_TOKEN }}
            VALKEY_HOST=${{ secrets.VALKEY_HOST }}
            VALKEY_PORT=${{ secrets.VALKEY_PORT }}
            VALKEY_PASSWORD=${{ secrets.VALKEY_PASSWORD }}
            EOF

            # Log into registry
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} registry.digitalocean.com

            # Deploy
            docker compose pull
            docker compose up -d

            # Clean up old images
            docker image prune -f

      - name: Notify Slack of Deployment
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: "Monarch service deployment ${{ job.status }}"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()